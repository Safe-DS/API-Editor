{
  "schemaVersion": 2,
  "boundaryAnnotations": {
    "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/damping": {
      "target": "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/damping",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "unsure",
      "interval": {
        "isDiscrete": false,
        "lowerIntervalLimit": 0.5,
        "lowerLimitType": 0,
        "upperIntervalLimit": 1,
        "upperLimitType": 1
      }
    }
  },
  "calledAfterAnnotations": {},
  "completeAnnotations": {},
  "descriptionAnnotations": {},
  "enumAnnotations": {},
  "expertAnnotations": {},
  "groupAnnotations": {},
  "moveAnnotations": {},
  "pureAnnotations": {},
  "renameAnnotations": {},
  "removeAnnotations": {
    "sklearn/sklearn.base/BiclusterMixin": {
      "target": "sklearn/sklearn.base/BiclusterMixin",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._bicluster/BaseSpectral": {
      "target": "sklearn/sklearn.cluster._bicluster/BaseSpectral",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "unsure"
    },
    "sklearn/sklearn.cluster._bicluster/SpectralBiclustering": {
      "target": "sklearn/sklearn.cluster._bicluster/SpectralBiclustering",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._bicluster/SpectralCoclustering": {
      "target": "sklearn/sklearn.cluster._bicluster/SpectralCoclustering",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._birch/_CFNode": {
      "target": "sklearn/sklearn.cluster._birch/_CFNode",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._birch/_CFSubcluster": {
      "target": "sklearn/sklearn.cluster._birch/_CFSubcluster",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.base/BiclusterMixin/biclusters_@getter": {
      "target": "sklearn/sklearn.base/BiclusterMixin/biclusters_@getter",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.base/BiclusterMixin/get_indices": {
      "target": "sklearn/sklearn.base/BiclusterMixin/get_indices",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.base/BiclusterMixin/get_shape": {
      "target": "sklearn/sklearn.base/BiclusterMixin/get_shape",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.base/BiclusterMixin/get_submatrix": {
      "target": "sklearn/sklearn.base/BiclusterMixin/get_submatrix",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/_more_tags": {
      "target": "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/_more_tags",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/fit_predict": {
      "target": "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/fit_predict",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/fit_predict@getter": {
      "target": "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/fit_predict@getter",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._bicluster/BaseSpectral/__init__": {
      "target": "sklearn/sklearn.cluster._bicluster/BaseSpectral/__init__",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "unsure"
    },
    "sklearn/sklearn.cluster._bicluster/BaseSpectral/_k_means": {
      "target": "sklearn/sklearn.cluster._bicluster/BaseSpectral/_k_means",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._bicluster/BaseSpectral/_svd": {
      "target": "sklearn/sklearn.cluster._bicluster/BaseSpectral/_svd",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._bicluster/SpectralBiclustering/_fit": {
      "target": "sklearn/sklearn.cluster._bicluster/SpectralBiclustering/_fit",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._bicluster/SpectralBiclustering/_fit_best_piecewise": {
      "target": "sklearn/sklearn.cluster._bicluster/SpectralBiclustering/_fit_best_piecewise",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._bicluster/SpectralBiclustering/_project_and_cluster": {
      "target": "sklearn/sklearn.cluster._bicluster/SpectralBiclustering/_project_and_cluster",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._bicluster/SpectralCoclustering/_fit": {
      "target": "sklearn/sklearn.cluster._bicluster/SpectralCoclustering/_fit",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._birch/Birch/_check_fit": {
      "target": "sklearn/sklearn.cluster._birch/Birch/_check_fit",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._birch/Birch/_fit": {
      "target": "sklearn/sklearn.cluster._birch/Birch/_fit",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "unsure"
    },
    "sklearn/sklearn.cluster._birch/Birch/_get_leaves": {
      "target": "sklearn/sklearn.cluster._birch/Birch/_get_leaves",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._birch/Birch/_global_clustering": {
      "target": "sklearn/sklearn.cluster._birch/Birch/_global_clustering",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._birch/Birch/partial_fit": {
      "target": "sklearn/sklearn.cluster._birch/Birch/partial_fit",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._birch/Birch/transform": {
      "target": "sklearn/sklearn.cluster._birch/Birch/transform",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._birch/_CFNode/__init__": {
      "target": "sklearn/sklearn.cluster._birch/_CFNode/__init__",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._birch/_CFNode/append_subcluster": {
      "target": "sklearn/sklearn.cluster._birch/_CFNode/append_subcluster",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._birch/_CFNode/insert_cf_subcluster": {
      "target": "sklearn/sklearn.cluster._birch/_CFNode/insert_cf_subcluster",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._birch/_CFNode/update_split_subclusters": {
      "target": "sklearn/sklearn.cluster._birch/_CFNode/update_split_subclusters",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._birch/_CFSubcluster/__init__": {
      "target": "sklearn/sklearn.cluster._birch/_CFSubcluster/__init__",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._birch/_CFSubcluster/merge_subcluster": {
      "target": "sklearn/sklearn.cluster._birch/_CFSubcluster/merge_subcluster",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "unsure"
    },
    "sklearn/sklearn.cluster._birch/_CFSubcluster/radius@getter": {
      "target": "sklearn/sklearn.cluster._birch/_CFSubcluster/radius@getter",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "unsure"
    },
    "sklearn/sklearn.cluster._birch/_CFSubcluster/update": {
      "target": "sklearn/sklearn.cluster._birch/_CFSubcluster/update",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._spectral/SpectralClustering/_more_tags": {
      "target": "sklearn/sklearn.cluster._spectral/SpectralClustering/_more_tags",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    }
  },
  "todoAnnotations": {
    "sklearn/sklearn.cluster._optics/OPTICS/__init__/min_cluster_size": {
      "target": "sklearn/sklearn.cluster._optics/OPTICS/__init__/min_cluster_size",
      "authors": [
        "aclrian",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "newTodo": "two boundaries for each number type",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._optics/OPTICS/__init__/xi": {
      "target": "sklearn/sklearn.cluster._optics/OPTICS/__init__/xi",
      "authors": [
        "aclrian",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "newTodo": "The @Boundary Annotation with the interval '{'isDiscrete': False, 'lowerIntervalLimit': 0, 'lowerLimitType': 0, 'upperIntervalLimit': 1, 'upperLimitType': 0}' from the previous version was at 'sklearn/sklearn.cluster._optics/OPTICS/__init__/xi' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._optics/OPTICS/__init__/xi",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/n_clusters": {
      "target": "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/n_clusters",
      "authors": [
        "aclrian",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "newTodo": "should have a boundary annotation (>0), but cannot be auto generated",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/distance_threshold": {
      "target": "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/distance_threshold",
      "authors": [
        "aclrian",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "newTodo": "dependency with n_clusters and compute_full_tree\nIf not None, n_clusters must be None and compute_full_tree must be True.",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._mean_shift/MeanShift/__init__/bandwidth": {
      "target": "sklearn/sklearn.cluster._mean_shift/MeanShift/__init__/bandwidth",
      "authors": [
        "aclrian",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "newTodo": "dependency with estimate_bandwidth\nIf not given, the bandwidth is estimated using sklearn.cluster.estimate_bandwidth",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._optics/OPTICS/__init__/min_samples": {
      "target": "sklearn/sklearn.cluster._optics/OPTICS/__init__/min_samples",
      "authors": [
        "aclrian",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "newTodo": "boundary for each number type",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/affinity": {
      "target": "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/affinity",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'euclidean ( type: string )' from the previous version was at 'sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/affinity' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/affinity",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/fit/y": {
      "target": "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/fit/y",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/fit/y' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/fit/y",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/connectivity": {
      "target": "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/connectivity",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/connectivity' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/connectivity",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/fit_predict/y": {
      "target": "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/fit_predict/y",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/fit_predict/y' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/fit_predict/y",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/linkage": {
      "target": "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/linkage",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'ward ( type: string )' from the previous version was at 'sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/linkage' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/linkage",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/fit/y": {
      "target": "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/fit/y",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/fit/y' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/fit/y",
      "reviewResult": "unsure"
    },
    "sklearn/sklearn.cluster._birch/Birch/fit/y": {
      "target": "sklearn/sklearn.cluster._birch/Birch/fit/y",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._birch/Birch/fit/y' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._birch/Birch/fit/y",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/metric_params": {
      "target": "sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/metric_params",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/metric_params' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/metric_params",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._dbscan/DBSCAN/fit/y": {
      "target": "sklearn/sklearn.cluster._dbscan/DBSCAN/fit/y",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._dbscan/DBSCAN/fit/y' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._dbscan/DBSCAN/fit/y",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._dbscan/DBSCAN/fit/sample_weight": {
      "target": "sklearn/sklearn.cluster._dbscan/DBSCAN/fit/sample_weight",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._dbscan/DBSCAN/fit/sample_weight' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._dbscan/DBSCAN/fit/sample_weight",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._dbscan/DBSCAN/fit_predict/y": {
      "target": "sklearn/sklearn.cluster._dbscan/DBSCAN/fit_predict/y",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._dbscan/DBSCAN/fit_predict/y' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._dbscan/DBSCAN/fit_predict/y",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._dbscan/DBSCAN/fit_predict/sample_weight": {
      "target": "sklearn/sklearn.cluster._dbscan/DBSCAN/fit_predict/sample_weight",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._dbscan/DBSCAN/fit_predict/sample_weight' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._dbscan/DBSCAN/fit_predict/sample_weight",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._kmeans/KMeans/fit/sample_weight": {
      "target": "sklearn/sklearn.cluster._kmeans/KMeans/fit/sample_weight",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._kmeans/KMeans/fit/sample_weight' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._kmeans/KMeans/fit/sample_weight",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/init": {
      "target": "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/init",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'k-means++ ( type: string )' from the previous version was at 'sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/init' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/init",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/fit/y": {
      "target": "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/fit/y",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/fit/y' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/fit/y",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/fit/sample_weight": {
      "target": "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/fit/sample_weight",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/fit/sample_weight' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/fit/sample_weight",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/partial_fit/y": {
      "target": "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/partial_fit/y",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/partial_fit/y' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/partial_fit/y",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/partial_fit/sample_weight": {
      "target": "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/partial_fit/sample_weight",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/partial_fit/sample_weight' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/partial_fit/sample_weight",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._mean_shift/MeanShift/__init__/seeds": {
      "target": "sklearn/sklearn.cluster._mean_shift/MeanShift/__init__/seeds",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._mean_shift/MeanShift/__init__/seeds' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._mean_shift/MeanShift/__init__/seeds",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._mean_shift/MeanShift/fit/y": {
      "target": "sklearn/sklearn.cluster._mean_shift/MeanShift/fit/y",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._mean_shift/MeanShift/fit/y' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._mean_shift/MeanShift/fit/y",
      "reviewResult": "unsure"
    },
    "sklearn/sklearn.cluster._optics/OPTICS/__init__/p": {
      "target": "sklearn/sklearn.cluster._optics/OPTICS/__init__/p",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value '2 ( type: number )' from the previous version was at 'sklearn/sklearn.cluster._optics/OPTICS/__init__/p' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._optics/OPTICS/__init__/p",
      "reviewResult": "unsure"
    },
    "sklearn/sklearn.cluster._optics/OPTICS/__init__/metric_params": {
      "target": "sklearn/sklearn.cluster._optics/OPTICS/__init__/metric_params",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._optics/OPTICS/__init__/metric_params' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._optics/OPTICS/__init__/metric_params",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._optics/OPTICS/__init__/algorithm": {
      "target": "sklearn/sklearn.cluster._optics/OPTICS/__init__/algorithm",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'auto ( type: string )' from the previous version was at 'sklearn/sklearn.cluster._optics/OPTICS/__init__/algorithm' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._optics/OPTICS/__init__/algorithm",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/kernel_params": {
      "target": "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/kernel_params",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/kernel_params' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/kernel_params",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._spectral/SpectralClustering/fit/y": {
      "target": "sklearn/sklearn.cluster._spectral/SpectralClustering/fit/y",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._spectral/SpectralClustering/fit/y' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._spectral/SpectralClustering/fit/y",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._spectral/SpectralClustering/fit_predict/y": {
      "target": "sklearn/sklearn.cluster._spectral/SpectralClustering/fit_predict/y",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._spectral/SpectralClustering/fit_predict/y' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._spectral/SpectralClustering/fit_predict/y",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/linkage": {
      "target": "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/linkage",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'optional' and the default Value 'ward ( type: string )' from the previous version was at 'sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/linkage' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/linkage",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/fit/y": {
      "target": "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/fit/y",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'optional' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/fit/y' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/fit/y",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/connectivity": {
      "target": "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/connectivity",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'optional' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/connectivity' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/connectivity",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/algorithm": {
      "target": "sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/algorithm",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'optional' and the default Value 'auto ( type: string )' from the previous version was at 'sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/algorithm' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/algorithm",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._kmeans/KMeans/__init__/init": {
      "target": "sklearn/sklearn.cluster._kmeans/KMeans/__init__/init",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'optional' and the default Value 'k-means++ ( type: string )' from the previous version was at 'sklearn/sklearn.cluster._kmeans/KMeans/__init__/init' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._kmeans/KMeans/__init__/init",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._kmeans/KMeans/fit/y": {
      "target": "sklearn/sklearn.cluster._kmeans/KMeans/fit/y",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'optional' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._kmeans/KMeans/fit/y' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._kmeans/KMeans/fit/y",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/eigen_solver": {
      "target": "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/eigen_solver",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'optional' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/eigen_solver' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/eigen_solver",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/fit/X": {
      "target": "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/fit/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/fit/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/fit/X",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/fit/X": {
      "target": "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/fit/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/fit/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/fit/X",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/fit_predict/X": {
      "target": "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/fit_predict/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/fit_predict/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/fit_predict/X",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/fit/X": {
      "target": "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/fit/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/fit/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/fit/X",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._birch/Birch/fit/X": {
      "target": "sklearn/sklearn.cluster._birch/Birch/fit/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.cluster._birch/Birch/fit/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._birch/Birch/fit/X",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._birch/Birch/predict/X": {
      "target": "sklearn/sklearn.cluster._birch/Birch/predict/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.cluster._birch/Birch/predict/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._birch/Birch/predict/X",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._dbscan/DBSCAN/fit/X": {
      "target": "sklearn/sklearn.cluster._dbscan/DBSCAN/fit/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.cluster._dbscan/DBSCAN/fit/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._dbscan/DBSCAN/fit/X",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._dbscan/DBSCAN/fit_predict/X": {
      "target": "sklearn/sklearn.cluster._dbscan/DBSCAN/fit_predict/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.cluster._dbscan/DBSCAN/fit_predict/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._dbscan/DBSCAN/fit_predict/X",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._feature_agglomeration/AgglomerationTransform/transform/X": {
      "target": "sklearn/sklearn.cluster._feature_agglomeration/AgglomerationTransform/transform/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.cluster._feature_agglomeration/AgglomerationTransform/transform/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._feature_agglomeration/AgglomerationTransform/transform/X",
      "reviewResult": "unsure"
    },
    "sklearn/sklearn.cluster._kmeans/KMeans/fit/X": {
      "target": "sklearn/sklearn.cluster._kmeans/KMeans/fit/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.cluster._kmeans/KMeans/fit/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._kmeans/KMeans/fit/X",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/fit/X": {
      "target": "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/fit/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/fit/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/fit/X",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._mean_shift/MeanShift/fit/X": {
      "target": "sklearn/sklearn.cluster._mean_shift/MeanShift/fit/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.cluster._mean_shift/MeanShift/fit/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._mean_shift/MeanShift/fit/X",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._spectral/SpectralClustering/fit/X": {
      "target": "sklearn/sklearn.cluster._spectral/SpectralClustering/fit/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.cluster._spectral/SpectralClustering/fit/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._spectral/SpectralClustering/fit/X",
      "reviewResult": ""
    },
    "sklearn/sklearn.cluster._spectral/SpectralClustering/fit_predict/X": {
      "target": "sklearn/sklearn.cluster._spectral/SpectralClustering/fit_predict/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.cluster._spectral/SpectralClustering/fit_predict/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._spectral/SpectralClustering/fit_predict/X",
      "reviewResult": ""
    }
  },
  "valueAnnotations": {
    "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/max_iter": {
      "target": "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/max_iter",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "number",
      "defaultValue": 200
    },
    "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/convergence_iter": {
      "target": "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/convergence_iter",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "number",
      "defaultValue": 15
    },
    "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/copy": {
      "target": "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/copy",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "boolean",
      "defaultValue": true
    },
    "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/preference": {
      "target": "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/preference",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/verbose": {
      "target": "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/verbose",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "boolean",
      "defaultValue": false
    },
    "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/random_state": {
      "target": "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/random_state",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/random_state' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/random_state",
      "reviewResult": "unsure",
      "variant": "constant",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/memory": {
      "target": "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/memory",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/compute_full_tree": {
      "target": "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/compute_full_tree",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "string",
      "defaultValue": "auto"
    },
    "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/compute_distances": {
      "target": "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/compute_distances",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "boolean",
      "defaultValue": false
    },
    "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/memory": {
      "target": "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/memory",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/compute_full_tree": {
      "target": "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/compute_full_tree",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "string",
      "defaultValue": "auto"
    },
    "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/distance_threshold": {
      "target": "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/distance_threshold",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/compute_distances": {
      "target": "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/compute_distances",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "boolean",
      "defaultValue": false
    },
    "sklearn/sklearn.cluster._birch/Birch/__init__/compute_labels": {
      "target": "sklearn/sklearn.cluster._birch/Birch/__init__/compute_labels",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "boolean",
      "defaultValue": true
    },
    "sklearn/sklearn.cluster._birch/Birch/__init__/copy": {
      "target": "sklearn/sklearn.cluster._birch/Birch/__init__/copy",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "boolean",
      "defaultValue": true
    },
    "sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/p": {
      "target": "sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/p",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.cluster._kmeans/KMeans/__init__/copy_x": {
      "target": "sklearn/sklearn.cluster._kmeans/KMeans/__init__/copy_x",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "boolean",
      "defaultValue": true
    },
    "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/compute_labels": {
      "target": "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/compute_labels",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "boolean",
      "defaultValue": true
    },
    "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/max_no_improvement": {
      "target": "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/max_no_improvement",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "number",
      "defaultValue": 10
    },
    "sklearn/sklearn.cluster._mean_shift/MeanShift/__init__/cluster_all": {
      "target": "sklearn/sklearn.cluster._mean_shift/MeanShift/__init__/cluster_all",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "boolean",
      "defaultValue": true
    },
    "sklearn/sklearn.cluster._mean_shift/MeanShift/__init__/n_jobs": {
      "target": "sklearn/sklearn.cluster._mean_shift/MeanShift/__init__/n_jobs",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.cluster._mean_shift/MeanShift/__init__/max_iter": {
      "target": "sklearn/sklearn.cluster._mean_shift/MeanShift/__init__/max_iter",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "number",
      "defaultValue": 300
    },
    "sklearn/sklearn.cluster._optics/OPTICS/__init__/cluster_method": {
      "target": "sklearn/sklearn.cluster._optics/OPTICS/__init__/cluster_method",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "string",
      "defaultValue": "xi"
    },
    "sklearn/sklearn.cluster._optics/OPTICS/__init__/eps": {
      "target": "sklearn/sklearn.cluster._optics/OPTICS/__init__/eps",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.cluster._optics/OPTICS/__init__/predecessor_correction": {
      "target": "sklearn/sklearn.cluster._optics/OPTICS/__init__/predecessor_correction",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "boolean",
      "defaultValue": true
    },
    "sklearn/sklearn.cluster._optics/OPTICS/__init__/leaf_size": {
      "target": "sklearn/sklearn.cluster._optics/OPTICS/__init__/leaf_size",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "number",
      "defaultValue": 30
    },
    "sklearn/sklearn.cluster._optics/OPTICS/__init__/n_jobs": {
      "target": "sklearn/sklearn.cluster._optics/OPTICS/__init__/n_jobs",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/n_components": {
      "target": "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/n_components",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/n_init": {
      "target": "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/n_init",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "number",
      "defaultValue": 10
    },
    "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/gamma": {
      "target": "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/gamma",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "number",
      "defaultValue": 1
    },
    "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/n_neighbors": {
      "target": "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/n_neighbors",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "number",
      "defaultValue": 10
    },
    "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/degree": {
      "target": "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/degree",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "number",
      "defaultValue": 3
    },
    "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/coef0": {
      "target": "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/coef0",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "number",
      "defaultValue": 1
    },
    "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/n_jobs": {
      "target": "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/n_jobs",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/verbose": {
      "target": "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/verbose",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "boolean",
      "defaultValue": false
    },
    "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/damping": {
      "target": "sklearn/sklearn.cluster._affinity_propagation/AffinityPropagation/__init__/damping",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "unsure",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 0.5
    },
    "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/affinity": {
      "target": "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/affinity",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "The @Value Annotation with the variant 'optional' and the default Value 'euclidean ( type: string )' from the previous version was at 'sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/affinity' and the possible alternatives in the new version of the api are: sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/affinity",
      "reviewResult": "unsure",
      "variant": "optional",
      "defaultValueType": "string",
      "defaultValue": "euclidean"
    },
    "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/distance_threshold": {
      "target": "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/distance_threshold",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.cluster._birch/Birch/__init__/threshold": {
      "target": "sklearn/sklearn.cluster._birch/Birch/__init__/threshold",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 0.5
    },
    "sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/min_samples": {
      "target": "sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/min_samples",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 5
    },
    "sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/metric": {
      "target": "sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/metric",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "string",
      "defaultValue": "euclidean"
    },
    "sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/leaf_size": {
      "target": "sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/leaf_size",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 30
    },
    "sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/n_jobs": {
      "target": "sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/n_jobs",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.cluster._kmeans/KMeans/__init__/n_clusters": {
      "target": "sklearn/sklearn.cluster._kmeans/KMeans/__init__/n_clusters",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "unsure",
      "variant": "required"
    },
    "sklearn/sklearn.cluster._kmeans/KMeans/__init__/max_iter": {
      "target": "sklearn/sklearn.cluster._kmeans/KMeans/__init__/max_iter",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "unsure",
      "variant": "required"
    },
    "sklearn/sklearn.cluster._kmeans/KMeans/__init__/tol": {
      "target": "sklearn/sklearn.cluster._kmeans/KMeans/__init__/tol",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 0.0001
    },
    "sklearn/sklearn.cluster._kmeans/KMeans/__init__/verbose": {
      "target": "sklearn/sklearn.cluster._kmeans/KMeans/__init__/verbose",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 0
    },
    "sklearn/sklearn.cluster._kmeans/KMeans/__init__/random_state": {
      "target": "sklearn/sklearn.cluster._kmeans/KMeans/__init__/random_state",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/n_clusters": {
      "target": "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/n_clusters",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 100
    },
    "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/max_iter": {
      "target": "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/max_iter",
      "authors": [
        "$autogen$",
        "lars-reimann",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "reviewResult": "unsure",
      "variant": "required"
    },
    "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/batch_size": {
      "target": "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/batch_size",
      "authors": [
        "$autogen$",
        "lars-reimann",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "reviewResult": "unsure",
      "variant": "required"
    },
    "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/verbose": {
      "target": "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/verbose",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 0
    },
    "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/random_state": {
      "target": "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/random_state",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/tol": {
      "target": "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/tol",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 0
    },
    "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/init_size": {
      "target": "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/init_size",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/reassignment_ratio": {
      "target": "sklearn/sklearn.cluster._kmeans/MiniBatchKMeans/__init__/reassignment_ratio",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 0.01
    },
    "sklearn/sklearn.cluster._mean_shift/MeanShift/__init__/bin_seeding": {
      "target": "sklearn/sklearn.cluster._mean_shift/MeanShift/__init__/bin_seeding",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "boolean",
      "defaultValue": true
    },
    "sklearn/sklearn.cluster._optics/OPTICS/__init__/min_cluster_size": {
      "target": "sklearn/sklearn.cluster._optics/OPTICS/__init__/min_cluster_size",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/random_state": {
      "target": "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/random_state",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "unsure",
      "variant": "optional",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/affinity": {
      "target": "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/affinity",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "string",
      "defaultValue": "nearest_neighbors"
    },
    "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/n_clusters": {
      "target": "sklearn/sklearn.cluster._agglomerative/AgglomerativeClustering/__init__/n_clusters",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "required"
    },
    "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/n_clusters": {
      "target": "sklearn/sklearn.cluster._agglomerative/FeatureAgglomeration/__init__/n_clusters",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "required"
    },
    "sklearn/sklearn.cluster._birch/Birch/__init__/branching_factor": {
      "target": "sklearn/sklearn.cluster._birch/Birch/__init__/branching_factor",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "required"
    },
    "sklearn/sklearn.cluster._birch/Birch/__init__/n_clusters": {
      "target": "sklearn/sklearn.cluster._birch/Birch/__init__/n_clusters",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "required"
    },
    "sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/eps": {
      "target": "sklearn/sklearn.cluster._dbscan/DBSCAN/__init__/eps",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "required"
    },
    "sklearn/sklearn.cluster._mean_shift/MeanShift/__init__/bandwidth": {
      "target": "sklearn/sklearn.cluster._mean_shift/MeanShift/__init__/bandwidth",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "required"
    },
    "sklearn/sklearn.cluster._mean_shift/MeanShift/__init__/min_bin_freq": {
      "target": "sklearn/sklearn.cluster._mean_shift/MeanShift/__init__/min_bin_freq",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "required"
    },
    "sklearn/sklearn.cluster._optics/OPTICS/__init__/min_samples": {
      "target": "sklearn/sklearn.cluster._optics/OPTICS/__init__/min_samples",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "required"
    },
    "sklearn/sklearn.cluster._optics/OPTICS/__init__/max_eps": {
      "target": "sklearn/sklearn.cluster._optics/OPTICS/__init__/max_eps",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "unsure",
      "variant": "required"
    },
    "sklearn/sklearn.cluster._optics/OPTICS/__init__/metric": {
      "target": "sklearn/sklearn.cluster._optics/OPTICS/__init__/metric",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "required"
    },
    "sklearn/sklearn.cluster._optics/OPTICS/__init__/xi": {
      "target": "sklearn/sklearn.cluster._optics/OPTICS/__init__/xi",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "required"
    },
    "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/n_clusters": {
      "target": "sklearn/sklearn.cluster._spectral/SpectralClustering/__init__/n_clusters",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "aclrian"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "required"
    }
  }
}
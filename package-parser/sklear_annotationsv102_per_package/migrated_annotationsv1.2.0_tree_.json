{
  "schemaVersion": 2,
  "boundaryAnnotations": {},
  "calledAfterAnnotations": {},
  "completeAnnotations": {},
  "descriptionAnnotations": {},
  "enumAnnotations": {},
  "expertAnnotations": {},
  "groupAnnotations": {},
  "moveAnnotations": {},
  "pureAnnotations": {},
  "renameAnnotations": {},
  "removeAnnotations": {
    "sklearn/sklearn.tree._export/Sentinel": {
      "target": "sklearn/sklearn.tree._export/Sentinel",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._export/_BaseTreeExporter": {
      "target": "sklearn/sklearn.tree._export/_BaseTreeExporter",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._export/_DOTTreeExporter": {
      "target": "sklearn/sklearn.tree._export/_DOTTreeExporter",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._export/_MPLTreeExporter": {
      "target": "sklearn/sklearn.tree._export/_MPLTreeExporter",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._reingold_tilford/DrawTree": {
      "target": "sklearn/sklearn.tree._reingold_tilford/DrawTree",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._reingold_tilford/Tree": {
      "target": "sklearn/sklearn.tree._reingold_tilford/Tree",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/BaseDecisionTree/__init__": {
      "target": "sklearn/sklearn.tree._classes/BaseDecisionTree/__init__",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "unsure"
    },
    "sklearn/sklearn.tree._classes/BaseDecisionTree/_prune_tree": {
      "target": "sklearn/sklearn.tree._classes/BaseDecisionTree/_prune_tree",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/BaseDecisionTree/_validate_X_predict": {
      "target": "sklearn/sklearn.tree._classes/BaseDecisionTree/_validate_X_predict",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/BaseDecisionTree/decision_path": {
      "target": "sklearn/sklearn.tree._classes/BaseDecisionTree/decision_path",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/BaseDecisionTree/feature_importances_@getter": {
      "target": "sklearn/sklearn.tree._classes/BaseDecisionTree/feature_importances_@getter",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/BaseDecisionTree/fit": {
      "target": "sklearn/sklearn.tree._classes/BaseDecisionTree/fit",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "unsure"
    },
    "sklearn/sklearn.tree._classes/BaseDecisionTree/get_depth": {
      "target": "sklearn/sklearn.tree._classes/BaseDecisionTree/get_depth",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/predict_log_proba": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/predict_log_proba",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/DecisionTreeRegressor/_compute_partial_dependence_recursion": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeRegressor/_compute_partial_dependence_recursion",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._export/Sentinel/__repr__": {
      "target": "sklearn/sklearn.tree._export/Sentinel/__repr__",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._export/_BaseTreeExporter/__init__": {
      "target": "sklearn/sklearn.tree._export/_BaseTreeExporter/__init__",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._export/_BaseTreeExporter/get_color": {
      "target": "sklearn/sklearn.tree._export/_BaseTreeExporter/get_color",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._export/_BaseTreeExporter/get_fill_color": {
      "target": "sklearn/sklearn.tree._export/_BaseTreeExporter/get_fill_color",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._export/_BaseTreeExporter/node_to_str": {
      "target": "sklearn/sklearn.tree._export/_BaseTreeExporter/node_to_str",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._export/_DOTTreeExporter/__init__": {
      "target": "sklearn/sklearn.tree._export/_DOTTreeExporter/__init__",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._export/_DOTTreeExporter/export": {
      "target": "sklearn/sklearn.tree._export/_DOTTreeExporter/export",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._export/_DOTTreeExporter/head": {
      "target": "sklearn/sklearn.tree._export/_DOTTreeExporter/head",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._export/_DOTTreeExporter/recurse": {
      "target": "sklearn/sklearn.tree._export/_DOTTreeExporter/recurse",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._export/_DOTTreeExporter/tail": {
      "target": "sklearn/sklearn.tree._export/_DOTTreeExporter/tail",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._export/_MPLTreeExporter/__init__": {
      "target": "sklearn/sklearn.tree._export/_MPLTreeExporter/__init__",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._export/_MPLTreeExporter/_make_tree": {
      "target": "sklearn/sklearn.tree._export/_MPLTreeExporter/_make_tree",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._export/_MPLTreeExporter/export": {
      "target": "sklearn/sklearn.tree._export/_MPLTreeExporter/export",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._export/_MPLTreeExporter/recurse": {
      "target": "sklearn/sklearn.tree._export/_MPLTreeExporter/recurse",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "unsure"
    },
    "sklearn/sklearn.tree._reingold_tilford/DrawTree/__init__": {
      "target": "sklearn/sklearn.tree._reingold_tilford/DrawTree/__init__",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._reingold_tilford/DrawTree/__repr__": {
      "target": "sklearn/sklearn.tree._reingold_tilford/DrawTree/__repr__",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._reingold_tilford/DrawTree/__str__": {
      "target": "sklearn/sklearn.tree._reingold_tilford/DrawTree/__str__",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._reingold_tilford/DrawTree/get_lmost_sibling": {
      "target": "sklearn/sklearn.tree._reingold_tilford/DrawTree/get_lmost_sibling",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._reingold_tilford/DrawTree/lbrother": {
      "target": "sklearn/sklearn.tree._reingold_tilford/DrawTree/lbrother",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._reingold_tilford/DrawTree/left": {
      "target": "sklearn/sklearn.tree._reingold_tilford/DrawTree/left",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._reingold_tilford/DrawTree/max_extents": {
      "target": "sklearn/sklearn.tree._reingold_tilford/DrawTree/max_extents",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._reingold_tilford/DrawTree/right": {
      "target": "sklearn/sklearn.tree._reingold_tilford/DrawTree/right",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._reingold_tilford/Tree/__init__": {
      "target": "sklearn/sklearn.tree._reingold_tilford/Tree/__init__",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": ""
    }
  },
  "todoAnnotations": {
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/ccp_alpha": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/ccp_alpha",
      "authors": [
        "jofaul",
        "migration"
      ],
      "reviewers": [
        "jofaul"
      ],
      "comment": "",
      "newTodo": "The @Boundary Annotation with the interval '{'isDiscrete': False, 'lowerIntervalLimit': 0, 'lowerLimitType': 0, 'upperIntervalLimit': 0, 'upperLimitType': 2}' from the previous version was at 'sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/ccp_alpha' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/ccp_alpha",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/ccp_alpha": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/ccp_alpha",
      "authors": [
        "jofaul",
        "migration"
      ],
      "reviewers": [
        "jofaul"
      ],
      "comment": "",
      "newTodo": "The @Boundary Annotation with the interval '{'isDiscrete': False, 'lowerIntervalLimit': 0, 'lowerLimitType': 0, 'upperIntervalLimit': 0, 'upperLimitType': 2}' from the previous version was at 'sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/ccp_alpha' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/ccp_alpha",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/BaseDecisionTree/cost_complexity_pruning_path/sample_weight": {
      "target": "sklearn/sklearn.tree._classes/BaseDecisionTree/cost_complexity_pruning_path/sample_weight",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.tree._classes/BaseDecisionTree/cost_complexity_pruning_path/sample_weight' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/BaseDecisionTree/cost_complexity_pruning_path/sample_weight",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/DecisionTreeRegressor/fit/sample_weight": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeRegressor/fit/sample_weight",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.tree._classes/DecisionTreeRegressor/fit/sample_weight' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/DecisionTreeRegressor/fit/sample_weight",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/splitter": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/splitter",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'random ( type: string )' from the previous version was at 'sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/splitter' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/splitter",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/class_weight": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/class_weight",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/class_weight' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/class_weight",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/ccp_alpha": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/ccp_alpha",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value '0 ( type: number )' from the previous version was at 'sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/ccp_alpha' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/ccp_alpha",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/ccp_alpha": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/ccp_alpha",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'constant' and the default Value '0 ( type: number )' from the previous version was at 'sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/ccp_alpha' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/ccp_alpha",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/splitter": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/splitter",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "jofaul"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'optional' and the default Value 'best ( type: string )' from the previous version was at 'sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/splitter' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/splitter",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/class_weight": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/class_weight",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'optional' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/class_weight' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/class_weight",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/fit/sample_weight": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/fit/sample_weight",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'optional' and the default Value 'None ( type: none )' from the previous version was at 'sklearn/sklearn.tree._classes/DecisionTreeClassifier/fit/sample_weight' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/DecisionTreeClassifier/fit/sample_weight",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/splitter": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/splitter",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "jofaul"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'optional' and the default Value 'best ( type: string )' from the previous version was at 'sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/splitter' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/splitter",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/splitter": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/splitter",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "jofaul"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'optional' and the default Value 'random ( type: string )' from the previous version was at 'sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/splitter' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/splitter",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/BaseDecisionTree/apply/X": {
      "target": "sklearn/sklearn.tree._classes/BaseDecisionTree/apply/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.tree._classes/BaseDecisionTree/apply/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/BaseDecisionTree/apply/X",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/BaseDecisionTree/cost_complexity_pruning_path/X": {
      "target": "sklearn/sklearn.tree._classes/BaseDecisionTree/cost_complexity_pruning_path/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.tree._classes/BaseDecisionTree/cost_complexity_pruning_path/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/BaseDecisionTree/cost_complexity_pruning_path/X",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/BaseDecisionTree/cost_complexity_pruning_path/y": {
      "target": "sklearn/sklearn.tree._classes/BaseDecisionTree/cost_complexity_pruning_path/y",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.tree._classes/BaseDecisionTree/cost_complexity_pruning_path/y' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/BaseDecisionTree/cost_complexity_pruning_path/y",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/BaseDecisionTree/predict/X": {
      "target": "sklearn/sklearn.tree._classes/BaseDecisionTree/predict/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.tree._classes/BaseDecisionTree/predict/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/BaseDecisionTree/predict/X",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/fit/X": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/fit/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.tree._classes/DecisionTreeClassifier/fit/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/DecisionTreeClassifier/fit/X",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/fit/y": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/fit/y",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.tree._classes/DecisionTreeClassifier/fit/y' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/DecisionTreeClassifier/fit/y",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/predict_proba/X": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/predict_proba/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.tree._classes/DecisionTreeClassifier/predict_proba/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/DecisionTreeClassifier/predict_proba/X",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/DecisionTreeRegressor/fit/X": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeRegressor/fit/X",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.tree._classes/DecisionTreeRegressor/fit/X' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/DecisionTreeRegressor/fit/X",
      "reviewResult": ""
    },
    "sklearn/sklearn.tree._classes/DecisionTreeRegressor/fit/y": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeRegressor/fit/y",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "newTodo": "The @Value Annotation with the variant 'required' from the previous version was at 'sklearn/sklearn.tree._classes/DecisionTreeRegressor/fit/y' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/DecisionTreeRegressor/fit/y",
      "reviewResult": ""
    }
  },
  "valueAnnotations": {
    "sklearn/sklearn.tree._classes/BaseDecisionTree/apply/check_input": {
      "target": "sklearn/sklearn.tree._classes/BaseDecisionTree/apply/check_input",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "boolean",
      "defaultValue": true
    },
    "sklearn/sklearn.tree._classes/BaseDecisionTree/predict/check_input": {
      "target": "sklearn/sklearn.tree._classes/BaseDecisionTree/predict/check_input",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "boolean",
      "defaultValue": true
    },
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/fit/check_input": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/fit/check_input",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "boolean",
      "defaultValue": true
    },
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/predict_proba/check_input": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/predict_proba/check_input",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "boolean",
      "defaultValue": true
    },
    "sklearn/sklearn.tree._classes/DecisionTreeRegressor/fit/check_input": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeRegressor/fit/check_input",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "boolean",
      "defaultValue": true
    },
    "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/min_samples_split": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/min_samples_split",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "number",
      "defaultValue": 2
    },
    "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/min_samples_leaf": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/min_samples_leaf",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "number",
      "defaultValue": 1
    },
    "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/min_weight_fraction_leaf": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/min_weight_fraction_leaf",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "number",
      "defaultValue": 0
    },
    "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/max_leaf_nodes": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/max_leaf_nodes",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/min_impurity_decrease": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/min_impurity_decrease",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "unsure",
      "variant": "constant",
      "defaultValueType": "number",
      "defaultValue": 0
    },
    "sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/max_depth": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/max_depth",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/min_samples_split": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/min_samples_split",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "number",
      "defaultValue": 2
    },
    "sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/min_samples_leaf": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/min_samples_leaf",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "number",
      "defaultValue": 1
    },
    "sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/min_weight_fraction_leaf": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/min_weight_fraction_leaf",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "number",
      "defaultValue": 0
    },
    "sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/min_impurity_decrease": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/min_impurity_decrease",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "unsure",
      "variant": "constant",
      "defaultValueType": "number",
      "defaultValue": 0
    },
    "sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/max_leaf_nodes": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/max_leaf_nodes",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [],
      "comment": "",
      "reviewResult": "",
      "variant": "constant",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/max_depth": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/max_depth",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "jofaul"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/min_samples_split": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/min_samples_split",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 2
    },
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/min_samples_leaf": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/min_samples_leaf",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 1
    },
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/min_weight_fraction_leaf": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/min_weight_fraction_leaf",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 0
    },
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/min_impurity_decrease": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/min_impurity_decrease",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "reviewResult": "unsure",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 0
    },
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/max_features": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/max_features",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "The @Value Annotation with the variant 'optional' and the default Value '0 ( type: number )' from the previous version was at 'sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/min_impurity_decrease' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/min_impurity_decrease, sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/max_features",
      "reviewResult": "unsure",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 0
    },
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/random_state": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/random_state",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "jofaul"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/max_leaf_nodes": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/max_leaf_nodes",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/ccp_alpha": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/ccp_alpha",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "The @Value Annotation with the variant 'optional' and the default Value '0 ( type: number )' from the previous version was at 'sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/ccp_alpha' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/DecisionTreeClassifier/__init__/ccp_alpha",
      "reviewResult": "unsure",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 0
    },
    "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/max_depth": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/max_depth",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/min_samples_split": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/min_samples_split",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 2
    },
    "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/min_samples_leaf": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/min_samples_leaf",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 1
    },
    "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/min_weight_fraction_leaf": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/min_weight_fraction_leaf",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 0
    },
    "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/max_features": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/max_features",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "The @Value Annotation with the variant 'optional' and the default Value '0 ( type: number )' from the previous version was at 'sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/min_impurity_decrease' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/max_features, sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/min_impurity_decrease",
      "reviewResult": "unsure",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 0
    },
    "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/min_impurity_decrease": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/min_impurity_decrease",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "reviewResult": "unsure",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 0
    },
    "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/random_state": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/random_state",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/max_leaf_nodes": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/max_leaf_nodes",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/ccp_alpha": {
      "target": "sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/ccp_alpha",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "lars-reimann"
      ],
      "comment": "The @Value Annotation with the variant 'optional' and the default Value '0 ( type: number )' from the previous version was at 'sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/ccp_alpha' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/DecisionTreeRegressor/__init__/ccp_alpha",
      "reviewResult": "unsure",
      "variant": "optional",
      "defaultValueType": "number",
      "defaultValue": 0
    },
    "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/max_depth": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/max_depth",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "jofaul"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/max_features": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/max_features",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "jofaul"
      ],
      "comment": "The @Value Annotation with the variant 'optional' and the default Value 'sqrt ( type: string )' from the previous version was at 'sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/max_features' and the possible alternatives in the new version of the api are: sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/max_features",
      "reviewResult": "unsure",
      "variant": "optional",
      "defaultValueType": "string",
      "defaultValue": "sqrt"
    },
    "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/random_state": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeClassifier/__init__/random_state",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "jofaul"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "none",
      "defaultValue": null
    },
    "sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/random_state": {
      "target": "sklearn/sklearn.tree._classes/ExtraTreeRegressor/__init__/random_state",
      "authors": [
        "$autogen$",
        "migration"
      ],
      "reviewers": [
        "jofaul"
      ],
      "comment": "",
      "reviewResult": "",
      "variant": "optional",
      "defaultValueType": "none",
      "defaultValue": null
    }
  }
}
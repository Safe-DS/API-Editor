{
    "sklearn.metrics.roc_auc_score": {
        "average": {
            "refined_type": {
                "kind": "EnumType",
                "values": ["micro", "macro", "samples", "weighted"]
            },
            "docstring": {
                "type": "{'micro', 'macro', 'samples', 'weighted'} or None,             default='macro'",
                "description": "If ``None``, the scores for each class are returned. Otherwise,\nthis determines the type of averaging performed on the data:\nNote: multiclass ROC AUC currently only handles the 'macro' and\n'weighted' averages.\n\n``'micro'``:\n    Calculate metrics globally by considering each element of the label\n    indicator matrix as a label.\n``'macro'``:\n    Calculate metrics for each label, and find their unweighted\n    mean.  This does not take label imbalance into account.\n``'weighted'``:\n    Calculate metrics for each label, and find their average, weighted\n    by support (the number of true instances for each label).\n``'samples'``:\n    Calculate metrics for each instance, and find their average.\n\nWill be ignored when ``y_true`` is binary."
            }
        },
        "max_fpr": {
            "refined_type": {
                "kind": "BoundaryType",
                "baseType": "float",
                "min": 0,
                "max": 1,
                "minInclusive": false,
                "maxInclusive": true
            },
            "docstring": {
                "type": "float > 0 and <= 1, default=None",
                "description": "If not ``None``, the standardized partial AUC [2]_ over the range\n[0, max_fpr] is returned. For the multiclass case, ``max_fpr``,\nshould be either equal to ``None`` or ``1.0`` as AUC ROC partial\ncomputation currently is not supported for multiclass."
            }
        },
        "multi_class": {
            "refined_type": {
                "kind": "EnumType",
                "values": ["raise", "ovr", "ovo"]
            },
            "docstring": {
                "type": "{'raise', 'ovr', 'ovo'}, default='raise'",
                "description": "Only used for multiclass targets. Determines the type of configuration\nto use. The default value raises an error, so either\n``'ovr'`` or ``'ovo'`` must be passed explicitly.\n\n``'ovr'``:\n    Stands for One-vs-rest. Computes the AUC of each class\n    against the rest [3]_ [4]_. This\n    treats the multiclass case in the same way as the multilabel case.\n    Sensitive to class imbalance even when ``average == 'macro'``,\n    because class imbalance affects the composition of each of the\n    'rest' groupings.\n``'ovo'``:\n    Stands for One-vs-one. Computes the average AUC of all\n    possible pairwise combinations of classes [5]_.\n    Insensitive to class imbalance when\n    ``average == 'macro'``."
            }
        }
    }
}

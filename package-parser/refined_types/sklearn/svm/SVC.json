{
    "sklearn.svm.SVC": {
        "C": {
            "refined_type": {
                "kind": "BoundaryType",
                "baseType": "float",
                "min": 0,
                "minInclusive": false,
                "max": null,
                "maxInclusive": false
            },
            "docstring": {
                "type": "float, default=1.0",
                "description": "Regularization parameter. The strength of the regularization is\ninversely proportional to C. Must be strictly positive. The penalty\nis a squared l2 penalty."
            }
        },
        "kernel": {
            "refined_type": {
                "kind": "UnionType",
                "types": [
                    {
                        "kind": "EnumType",
                        "values": [
                            "linear",
                            "poly",
                            "rbf",
                            "sigmoid",
                            "precomputed"
                        ]
                    },
                    {
                        "kind": "NamedType",
                        "name": "callable"
                    }
                ]
            },
            "docstring": {
                "type": "{'linear', 'poly', 'rbf', 'sigmoid', 'precomputed'}, default='rbf'",
                "description": "Specifies the kernel type to be used in the algorithm.\nIt must be one of 'linear', 'poly', 'rbf', 'sigmoid', 'precomputed' or\na callable.\nIf none is given, 'rbf' will be used. If a callable is given it is\nused to pre-compute the kernel matrix from data matrices; that matrix\nshould be an array of shape ``(n_samples, n_samples)``."
            }
        },
        "gamma": {
            "refined_type": {
                "kind": "UnionType",
                "types": [
                    {
                        "kind": "EnumType",
                        "values": ["scale", "auto"]
                    },
                    {
                        "kind": "NamedType",
                        "name": "float"
                    }
                ]
            },
            "docstring": {
                "type": "{'scale', 'auto'} or float, default='scale'",
                "description": "Kernel coefficient for 'rbf', 'poly' and 'sigmoid'.\n\n- if ``gamma='scale'`` (default) is passed then it uses\n  1 / (n_features * X.var()) as value of gamma,\n- if 'auto', uses 1 / n_features.\n\n.. versionchanged:: 0.22\n   The default value of ``gamma`` changed from 'auto' to 'scale'."
            }
        },
        "class_weight": {
            "refined_type": {
                "kind": "UnionType",
                "types": [
                    {
                        "kind": "NamedType",
                        "name": "dict"
                    },
                    {
                        "kind": "EnumType",
                        "values": ["balanced"]
                    }
                ]
            },
            "docstring": {
                "type": "dict or 'balanced', default=None",
                "description": "Set the parameter C of class i to class_weight[i]*C for\nSVC. If not given, all classes are supposed to have\nweight one.\nThe \"balanced\" mode uses the values of y to automatically adjust\nweights inversely proportional to class frequencies in the input data\nas ``n_samples / (n_classes * np.bincount(y))``."
            }
        },
        "decision_function_shape": {
            "refined_type": {
                "kind": "EnumType",
                "values": ["ovo", "ovr"]
            },
            "docstring": {
                "type": "{'ovo', 'ovr'}, default='ovr'",
                "description": "Whether to return a one-vs-rest ('ovr') decision function of shape\n(n_samples, n_classes) as all other classifiers, or the original\none-vs-one ('ovo') decision function of libsvm which has shape\n(n_samples, n_classes * (n_classes - 1) / 2). However, one-vs-one\n('ovo') is always used as multi-class strategy. The parameter is\nignored for binary classification.\n\n.. versionchanged:: 0.19\n    decision_function_shape is 'ovr' by default.\n\n.. versionadded:: 0.17\n   *decision_function_shape='ovr'* is recommended.\n\n.. versionchanged:: 0.17\n   Deprecated *decision_function_shape='ovo' and None*."
            }
        }
    }
}

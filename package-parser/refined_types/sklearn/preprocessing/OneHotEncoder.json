{
    "sklearn.preprocessing.OneHotEncoder": {
        "categories": {
            "refined_type": {
                "kind": "UnionType",
                "types": [
                    {
                        "kind": "EnumType",
                        "values": ["auto"]
                    },
                    {
                        "kind": "NamedType",
                        "name": "list of array-like"
                    }
                ]
            },
            "docstring": {
                "type": "'auto' or a list of array-like, default='auto'",
                "description": "Categories (unique values) per feature:\n\n- 'auto' : Determine categories automatically from the training data.\n- list : ``categories[i]`` holds the categories expected in the ith\n  column. The passed categories should not mix strings and numeric\n  values within a single feature, and should be sorted in case of\n  numeric values.\n\nThe used categories can be found in the ``categories_`` attribute.\n\n.. versionadded:: 0.20"
            }
        },
        "drop": {
            "refined_type": {
                "kind": "UnionType",
                "types": [
                    {
                        "kind": "EnumType",
                        "values": ["first", "if_binary"]
                    },
                    {
                        "kind": "NamedType",
                        "name": "array-like"
                    }
                ]
            },
            "docstring": {
                "type": "{'first', 'if_binary'} or a array-like of shape (n_features,),             default=None",
                "description": "Specifies a methodology to use to drop one of the categories per\nfeature. This is useful in situations where perfectly collinear\nfeatures cause problems, such as when feeding the resulting data\ninto a neural network or an unregularized regression.\n\nHowever, dropping one category breaks the symmetry of the original\nrepresentation and can therefore induce a bias in downstream models,\nfor instance for penalized linear classification or regression models.\n\n- None : retain all features (the default).\n- 'first' : drop the first category in each feature. If only one\n  category is present, the feature will be dropped entirely.\n- 'if_binary' : drop the first category in each feature with two\n  categories. Features with 1 or more than 2 categories are\n  left intact.\n- array : ``drop[i]`` is the category in feature ``X[:, i]`` that\n  should be dropped.\n\n.. versionadded:: 0.21\n   The parameter `drop` was added in 0.21.\n\n.. versionchanged:: 0.23\n   The option `drop='if_binary'` was added in 0.23."
            }
        },
        "handle_unknown": {
            "refined_type": {
                "kind": "EnumType",
                "values": ["error", "ignore"]
            },
            "docstring": {
                "type": "{'error', 'ignore'}, default='error'",
                "description": "Whether to raise an error or ignore if an unknown categorical feature\nis present during transform (default is to raise). When this parameter\nis set to 'ignore' and an unknown category is encountered during\ntransform, the resulting one-hot encoded columns for this feature\nwill be all zeros. In the inverse transform, an unknown category\nwill be denoted as None."
            }
        }
    }
}

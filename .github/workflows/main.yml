name: Main

on:
  push:
    branches: [ main ]

jobs:
  build-api-editor:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]
        java-version: [ 17 ]

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: api-editor/gui/package-lock.json

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.java-version }}
          cache: gradle

      # See https://docs.github.com/en/actions/guides/building-and-testing-java-with-gradle
      - name: Setup Gradle
        uses: gradle/wrapper-validation-action@v1

      - name: Build with Gradle
        run: ./gradlew build
        working-directory: ./api-editor

      - name: Install dependencies
        run: npm ci

      - name: Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  build-package-parser:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./package-parser
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.3
        with:
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3.2.4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

      - name: Smoke test (api)
        run: poetry run parse-package api -p package_parser -s package_parser -o out

      - name: Smoke test (usages)
        run: poetry run parse-package usages -p package_parser -c package_parser -o out

      - name: Smoke test (annotations)
        run: poetry run parse-package annotations -a tests/data/removeAnnotations/api_data.json -u tests/data/removeAnnotations/usage_data.json -o out/annotations.json

      - name: Smoke test (all)
        run: poetry run parse-package all -p package_parser -s package_parser -c package_parser -o out

      - name: Smoke test (migration)
        run: poetry run parse-package migrate -a1 tests/data/migration/apiv1_data.json -a2 tests/data/migration/apiv2_data.json -a tests/data/migration/annotationv1.json -o out

      # Requires installation of pytest and pytest-cov
      - name: Test with pytest
        run: poetry run pytest --doctest-modules
